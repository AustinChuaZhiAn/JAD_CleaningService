package Controller;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

import Model.Category;
import Model.ServiceCategoryCRUD;
import Model.ServiceCategoryList;

@WebServlet("/CategoryController")
public class CategoryController extends HttpServlet {
    private static final long serialVersionUID = 1L;
    private ServiceCategoryCRUD categoryDAO;
    
    public CategoryController() {
        super();
        categoryDAO = new ServiceCategoryList();
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            System.out.println("CategoryController: Starting doGet");
            List<Category> categories = categoryDAO.getAllCategory();
            System.out.println("Categories found: " + (categories != null ? categories.size() : "null"));
            
            if (categories != null) {
                for (Category c : categories) {
                    System.out.println("Category: " + c.toString());
                }
            }
            
            request.setAttribute("categories", categories);
            request.getRequestDispatcher("/View/Categories.jsp").forward(request, response);
            
        } catch (SQLException ex) {
            System.out.println("Error in CategoryController: " + ex.getMessage());
            ex.printStackTrace();
            throw new ServletException(ex);
        }
    }
    
    protected void doPost(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        String action = request.getParameter("action");
        
        try {
            switch(action) {
                case "update":
                    updateCategory(request, response);
                    break;
                case "delete":
                    deleteCategory(request, response);
                    break;
                default:
                    response.sendRedirect(request.getContextPath() + "/View/Categories.jsp");
                    break;
            }
        } catch (SQLException ex) {
            HttpSession session = request.getSession();
            session.setAttribute("error", "Database error occurred: " + ex.getMessage());
            response.sendRedirect(request.getContextPath() + "/CategoryController");
        }
    }
    
    private void updateCategory(HttpServletRequest request, HttpServletResponse response) 
            throws SQLException, ServletException, IOException {
                
        int categoryId = Integer.parseInt(request.getParameter("category_id"));
        String categoryName = request.getParameter("category_name");
        String description = request.getParameter("description");
        
        Category category = new Category();
        category.setCategory_id(categoryId);
        category.setCategory_name(categoryName);
        category.setDescription(description);
        
        HttpSession session = request.getSession();
        if (categoryDAO.updateCategory(category)) {
            session.setAttribute("success", "Category updated successfully");
        } else {
            session.setAttribute("error", "Failed to update category");
        }
        
        response.sendRedirect(request.getContextPath() + "/CategoryController");
    }
    
    private void deleteCategory(HttpServletRequest request, HttpServletResponse response) 
            throws SQLException, ServletException, IOException {
                
        int categoryId = Integer.parseInt(request.getParameter("category_id"));
        
        HttpSession session = request.getSession();
        if (categoryDAO.deleteCategory(categoryId)) {
            session.setAttribute("success", "Category deleted successfully");
        } else {
            session.setAttribute("error", "Failed to delete category");
        }
        
        response.sendRedirect(request.getContextPath() + "/CategoryController");
    }
}